{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class RegistrationPageComponent {\n  constructor() {}\n  ngOnDestroy() {\n    if (this.aSub) {\n      this.aSub.unsubscribe();\n    }\n  }\n  ngOnInit() {\n    this.form = new FormGroup({\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      password: new FormControl()\n    });\n    this.activRout.queryParams.subscribe(params => {\n      if (params['registered']) {\n        //Вы уже авторизованы\n      }\n    });\n  }\n  onSubmit() {\n    this.form.disable();\n    this.auth.register(this.form.value).subscribe(() => {\n      this.router.navigate(['/login'], {\n        queryParams: {\n          registered: true\n        }\n      });\n      console.log('УРА');\n    }, error => {\n      console.log(error);\n      this.form.enable();\n    });\n  }\n}\nRegistrationPageComponent.ɵfac = function RegistrationPageComponent_Factory(t) {\n  return new (t || RegistrationPageComponent)();\n};\nRegistrationPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegistrationPageComponent,\n  selectors: [[\"app-registration-page\"]],\n  decls: 20,\n  vars: 1,\n  consts: [[1, \"card-body\", 3, \"formGroup\", \"ngSubmit\"], [1, \"card-title\"], [1, \"input-field\"], [\"formControlName\", \"email\", \"id\", \"email\", \"type\", \"email\"], [\"formControlName\", \"password\", \"id\", \"password\", \"type\", \"password\"], [1, \"card-text\"], [\"formControlName\", \"admin\", \"id\", \"admin\", \"type\", \"text\", \"value\", \"delete this text\"], [\"href\", \"#\", 1, \"btn\", \"btn-primary\"]],\n  template: function RegistrationPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function RegistrationPageComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(1, \"h2\", 1);\n      i0.ɵɵtext(2, \"Registration\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"label\");\n      i0.ɵɵtext(5, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 2)(8, \"label\");\n      i0.ɵɵtext(9, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 2)(12, \"label\");\n      i0.ɵɵtext(13, \"Admin key\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"p\", 5);\n      i0.ɵɵtext(15, \"Leave this field empty\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"br\");\n      i0.ɵɵelementStart(18, \"a\", 7);\n      i0.ɵɵtext(19, \"Registration\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAQ,gBAAgB;;;AASnE,OAAM,MAAOC,yBAAyB;EAMpCC,eAEA;EAEAC,WAAW;IACT,IAAI,IAAI,CAACC,IAAI,EAAC;MACd,IAAI,CAACA,IAAI,CAACC,WAAW,EAAE;;EAEzB;EAEAC,QAAQ;IACN,IAAI,CAACC,IAAI,GAAG,IAAIT,SAAS,CAAC;MACxBU,KAAK,EAAE,IAAIT,WAAW,CAAC,IAAI,EAAE,CAACC,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACQ,KAAK,CAAC,CAAC;MACrEE,QAAQ,EAAE,IAAIX,WAAW;KAC1B,CAAC;IACF,IAAI,CAACY,SAAS,CAACC,WAAW,CAACC,SAAS,CAAEC,MAAa,IAAG;MACpD,IAAIA,MAAM,CAAC,YAAY,CAAC,EAAC;QACvB;MAAA;IAGJ,CAAC,CAAC;EACF;EACAC,QAAQ;IACN,IAAI,CAACR,IAAI,CAACS,OAAO,EAAE;IACnB,IAAI,CAACC,IAAI,CAACC,QAAQ,CAAC,IAAI,CAACX,IAAI,CAACY,KAAK,CAAC,CAACN,SAAS,CAC3C,MAAI;MACF,IAAI,CAACO,MAAM,CAACC,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAC;QAC9BT,WAAW,EAAC;UACVU,UAAU,EAAC;;OAEd,CAAC;MACJC,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;IACpB,CAAC,EACCC,KAAK,IAAE;MACLF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;MAClB,IAAI,CAAClB,IAAI,CAACmB,MAAM,EAAE;IACpB,CAAC,CACF;EACH;;AA5CSzB,yBAAyB;mBAAzBA,yBAAyB;AAAA;AAAzBA,yBAAyB;QAAzBA,yBAAyB;EAAA0B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCXtCC,+BAEwB;MAAxBA;QAAA,OAAYC,cAAU;MAAA,EAAC;MACnBD,6BAAuB;MAAAA,4BAAY;MAAAA,iBAAK;MACxCA,8BAAyB;MAChBA,qBAAK;MAAAA,iBAAQ;MACpBA,2BAAuD;MACzDA,iBAAM;MACNA,8BAAyB;MAChBA,wBAAQ;MAAAA,iBAAQ;MACvBA,4BAAgE;MAClEA,iBAAM;MACNA,+BAAyB;MACdA,0BAAS;MAAAA,iBAAQ;MACxBA,6BAAqB;MAAAA,uCAAsB;MAAAA,iBAAI;MAC/CA,4BAAgF;MAClFA,iBAAM;MACRA,sBAAI;MACJA,6BAAoC;MAAAA,6BAAY;MAAAA,iBAAI;;;MAjBxDA,oCAAkB","names":["FormGroup","FormControl","Validators","RegistrationPageComponent","constructor","ngOnDestroy","aSub","unsubscribe","ngOnInit","form","email","required","password","activRout","queryParams","subscribe","params","onSubmit","disable","auth","register","value","router","navigate","registered","console","log","error","enable","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/home/stas/hcba/client/src/app/registration-page/registration-page.component.ts","/home/stas/hcba/client/src/app/registration-page/registration-page.component.html"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { AuthService } from '../shared/services/auth.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute,Params,Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-registration-page',\n  templateUrl: './registration-page.component.html',\n  styleUrls: ['./registration-page.component.scss']\n})\nexport class RegistrationPageComponent implements OnInit, OnDestroy {\n  form!: FormGroup\n  auth!:AuthService\n  router!:Router\n  activRout!:ActivatedRoute\n  aSub!:Subscription\n  constructor(){\n\n  }\n\n  ngOnDestroy(): void {\n    if (this.aSub){\n    this.aSub.unsubscribe()\n    }\n  }\n\n  ngOnInit(){\n    this.form = new FormGroup({\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      password: new FormControl(),\n    })    \n    this.activRout.queryParams.subscribe((params:Params)=>{\n      if (params['registered']){\n        //Вы уже авторизованы\n        \n      }\n    })\n    }\n    onSubmit(){\n      this.form.disable()\n      this.auth.register(this.form.value).subscribe(\n        ()=>{\n          this.router.navigate(['/login'],{\n            queryParams:{\n              registered:true\n            }\n          })\n        console.log('УРА')\n      },\n        error=>{\n          console.log(error);\n          this.form.enable()\n        }\n      )\n    }\n\n}\n","<form class=\"card-body\" \n[formGroup]=\"form\" \n(ngSubmit)=\"onSubmit()\">\n    <h2 class=\"card-title\">Registration</h2>\n    <div class=\"input-field\">\n      <label>Email</label>\n      <input formControlName=\"email\" id=\"email\" type=\"email\">\n    </div>\n    <div class=\"input-field\">\n      <label>Password</label>\n      <input formControlName=\"password\" id=\"password\" type=\"password\">\n    </div>\n    <div class=\"input-field\">\n        <label>Admin key</label>\n        <p class=\"card-text\">Leave this field empty</p>\n        <input formControlName=\"admin\" id=\"admin\"  type=\"text\" value=\"delete this text\">\n      </div>\n    <br>\n    <a href=\"#\" class=\"btn btn-primary\">Registration</a>\n\n    </form>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}