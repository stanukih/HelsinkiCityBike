{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../shared/services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"rxjs\";\nexport class RegistrationPageComponent {\n  constructor(auth, router, activRout, form, aSub) {\n    this.auth = auth;\n    this.router = router;\n    this.activRout = activRout;\n    this.form = form;\n    this.aSub = aSub;\n  }\n  ngOnInit() {\n    this.form = new FormGroup({\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      password: new FormControl()\n    });\n    this.activRout.queryParams.subscribe(params => {\n      if (params['registered']) {\n        //Вы уже авторизованы\n      }\n    });\n  }\n  onSubmit() {\n    this.form.disable();\n    this.auth.register(this.form.value).subscribe(() => {\n      this.router.navigate(['/stantions']);\n      console.log('УРА');\n    }, error => {\n      console.log(error);\n      this.form.enable();\n    });\n  }\n}\nRegistrationPageComponent.ɵfac = function RegistrationPageComponent_Factory(t) {\n  return new (t || RegistrationPageComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.FormGroup), i0.ɵɵdirectiveInject(i4.Subscription));\n};\nRegistrationPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegistrationPageComponent,\n  selectors: [[\"app-registration-page\"]],\n  decls: 22,\n  vars: 1,\n  consts: [[1, \"card-title\"], [1, \"card-body\", 3, \"formGroup\", \"ngSubmit\"], [1, \"input-field\"], [\"formControlName\", \"email\", \"id\", \"email\", \"type\", \"email\"], [\"formControlName\", \"password\", \"id\", \"password\", \"type\", \"password\"], [1, \"card-text\"], [\"formControlName\", \"admin\", \"id\", \"admin\", \"type\", \"text\", \"value\", \"delete this text\"], [\"href\", \"#\", 1, \"btn\", \"btn-primary\"]],\n  template: function RegistrationPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\", 0);\n      i0.ɵɵtext(1, \"Registration\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function RegistrationPageComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"h2\", 0);\n      i0.ɵɵtext(4, \"Registration\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 2)(6, \"label\");\n      i0.ɵɵtext(7, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 2)(10, \"label\");\n      i0.ɵɵtext(11, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 2)(14, \"label\");\n      i0.ɵɵtext(15, \"Admin key\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"p\", 5);\n      i0.ɵɵtext(17, \"Leave this field empty\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"br\");\n      i0.ɵɵelementStart(20, \"a\", 7);\n      i0.ɵɵtext(21, \"Registration\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;AASnE,OAAM,MAAOC,yBAAyB;EACpCC,YAAoBC,IAAgB,EAAUC,MAAa,EAAUC,SAAwB,EAASC,IAAe,EAASC,IAAiB;IAA3H,SAAI,GAAJJ,IAAI;IAAsB,WAAM,GAANC,MAAM;IAAiB,cAAS,GAATC,SAAS;IAAwB,SAAI,GAAJC,IAAI;IAAoB,SAAI,GAAJC,IAAI;EAElI;EAEAC,QAAQ;IACN,IAAI,CAACF,IAAI,GAAG,IAAIR,SAAS,CAAC;MACxBW,KAAK,EAAE,IAAIV,WAAW,CAAC,IAAI,EAAE,CAACC,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACS,KAAK,CAAC,CAAC;MACrEE,QAAQ,EAAE,IAAIZ,WAAW;KAC1B,CAAC;IACF,IAAI,CAACM,SAAS,CAACO,WAAW,CAACC,SAAS,CAAEC,MAAa,IAAG;MACpD,IAAIA,MAAM,CAAC,YAAY,CAAC,EAAC;QACvB;MAAA;IAGJ,CAAC,CAAC;EACF;EACAC,QAAQ;IACN,IAAI,CAACT,IAAI,CAACU,OAAO,EAAE;IACnB,IAAI,CAACb,IAAI,CAACc,QAAQ,CAAC,IAAI,CAACX,IAAI,CAACY,KAAK,CAAC,CAACL,SAAS,CAC3C,MAAI;MACF,IAAI,CAACT,MAAM,CAACe,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;MACtCC,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;IACpB,CAAC,EACCC,KAAK,IAAE;MACLF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;MAClB,IAAI,CAAChB,IAAI,CAACiB,MAAM,EAAE;IACpB,CAAC,CACF;EACH;;AA7BStB,yBAAyB;mBAAzBA,yBAAyB;AAAA;AAAzBA,yBAAyB;QAAzBA,yBAAyB;EAAAuB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCXtCC,6BAAuB;MAAAA,4BAAY;MAAAA,iBAAK;MACxCA,+BAEwB;MAAxBA;QAAA,OAAYC,cAAU;MAAA,EAAC;MACnBD,6BAAuB;MAAAA,4BAAY;MAAAA,iBAAK;MACxCA,8BAAyB;MAChBA,qBAAK;MAAAA,iBAAQ;MACpBA,2BAAuD;MACzDA,iBAAM;MACNA,8BAAyB;MAChBA,yBAAQ;MAAAA,iBAAQ;MACvBA,4BAAgE;MAClEA,iBAAM;MACNA,+BAAyB;MACdA,0BAAS;MAAAA,iBAAQ;MACxBA,6BAAqB;MAAAA,uCAAsB;MAAAA,iBAAI;MAC/CA,4BAAgF;MAClFA,iBAAM;MACRA,sBAAI;MACJA,6BAAoC;MAAAA,6BAAY;MAAAA,iBAAI;;;MAjBxDA,eAAkB;MAAlBA,oCAAkB","names":["FormGroup","FormControl","Validators","RegistrationPageComponent","constructor","auth","router","activRout","form","aSub","ngOnInit","email","required","password","queryParams","subscribe","params","onSubmit","disable","register","value","navigate","console","log","error","enable","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/home/stas/hcba/client/src/app/registration-page/registration-page.component.ts","/home/stas/hcba/client/src/app/registration-page/registration-page.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AuthService } from '../shared/services/auth.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute,Params,Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-registration-page',\n  templateUrl: './registration-page.component.html',\n  styleUrls: ['./registration-page.component.scss']\n})\nexport class RegistrationPageComponent {\n  constructor(private auth:AuthService, private router:Router, private activRout:ActivatedRoute, public form: FormGroup, public aSub:Subscription){\n\n  }\n\n  ngOnInit(){\n    this.form = new FormGroup({\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      password: new FormControl(),\n    })    \n    this.activRout.queryParams.subscribe((params:Params)=>{\n      if (params['registered']){\n        //Вы уже авторизованы\n        \n      }\n    })\n    }\n    onSubmit(){\n      this.form.disable()\n      this.auth.register(this.form.value).subscribe(\n        ()=>{\n          this.router.navigate(['/stantions'])\n        console.log('УРА')\n      },\n        error=>{\n          console.log(error);\n          this.form.enable()\n        }\n      )\n    }\n\n}\n","<h2 class=\"card-title\">Registration</h2>\n<form class=\"card-body\" \n[formGroup]=\"form\" \n(ngSubmit)=\"onSubmit()\">\n    <h2 class=\"card-title\">Registration</h2>\n    <div class=\"input-field\">\n      <label>Email</label>\n      <input formControlName=\"email\" id=\"email\" type=\"email\">\n    </div>\n    <div class=\"input-field\">\n      <label>Password</label>\n      <input formControlName=\"password\" id=\"password\" type=\"password\">\n    </div>\n    <div class=\"input-field\">\n        <label>Admin key</label>\n        <p class=\"card-text\">Leave this field empty</p>\n        <input formControlName=\"admin\" id=\"admin\"  type=\"text\" value=\"delete this text\">\n      </div>\n    <br>\n    <a href=\"#\" class=\"btn btn-primary\">Registration</a>\n\n    </form>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}