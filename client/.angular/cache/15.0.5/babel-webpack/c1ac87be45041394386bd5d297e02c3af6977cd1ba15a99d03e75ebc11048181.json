{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from \"@angular/core\";\nlet TokenInterseptor = class TokenInterseptor {\n  constructor(auth) {\n    this.auth = auth;\n  }\n  intercept(req, next) {\n    if (this.auth.isAuthenticated()) {\n      req = req.clone({\n        setHeaders: {\n          Authorization: this.auth.getToken()\n        }\n      });\n    }\n    return next.handle(req);\n  }\n};\nTokenInterseptor = __decorate([Injectable], TokenInterseptor);\nexport { TokenInterseptor };","map":{"version":3,"mappings":";AACA,SAASA,UAAU,QAAQ,eAAe;AAKnC,IAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EACzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAc;EAEtCC,SAAS,CAACC,GAAqB,EAAEC,IAAiB;IAC9C,IAAI,IAAI,CAACH,IAAI,CAACI,eAAe,EAAE,EAAC;MAC5BF,GAAG,GAAGA,GAAG,CAACG,KAAK,CAAC;QACZC,UAAU,EAAE;UACRC,aAAa,EAAC,IAAI,CAACP,IAAI,CAACQ,QAAQ;;OAEvC,CAAC;;IAEN,OAAOL,IAAI,CAACM,MAAM,CAACP,GAAG,CAAC;EAC3B;CAEH;AAdYJ,gBAAgB,eAD5BD,UAAU,GACEC,gBAAgB,CAc5B;SAdYA,gBAAgB","names":["Injectable","TokenInterseptor","constructor","auth","intercept","req","next","isAuthenticated","clone","setHeaders","Authorization","getToken","handle"],"sourceRoot":"","sources":["/home/stas/hcba/client/src/app/shared/classes/token.interseptor.ts"],"sourcesContent":["import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { AuthService } from \"../services/auth.service\";\n\n@Injectable\nexport class TokenInterseptor implements HttpInterceptor{\n    constructor(private auth:AuthService){}\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        if (this.auth.isAuthenticated()){\n            req = req.clone({\n                setHeaders: {\n                    Authorization:this.auth.getToken()\n                }\n            })\n        }\n        return next.handle(req)\n    }\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}