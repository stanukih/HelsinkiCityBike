{"ast":null,"code":"import { tap } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.token = null;\n  }\n  register() {}\n  login(user) {\n    return this.http.post(\"/api/auth/login\", user).pipe(tap(({\n      token\n    }) => {\n      localStorage.setItem('auth-token', token);\n      this.setToken(token);\n    }));\n  }\n  setToken(token) {\n    this.token = token;\n  }\n  getToken() {\n    if (this.token) {\n      return this.token;\n    }\n  }\n  isAuthenticated() {\n    return !!this.token;\n  }\n  logout() {\n    this.setToken(null);\n    localStorage.clear();\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAAqBA,GAAG,QAAQ,MAAM;;;AAStC,OAAM,MAAOC,WAAW;EAIpBC,YAAoBC,IAAe;IAAf,SAAI,GAAJA,IAAI;IAFhB,UAAK,GAAe,IAAI;EAIhC;EACAC,QAAQ,IAAG;EACXC,KAAK,CAACC,IAAa;IACf,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAiB,iBAAiB,EAAED,IAAI,CAAC,CAC7DE,IAAI,CAACR,GAAG,CAAC,CAAC;MAACS;IAAK,CAAC,KAAG;MACjBC,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEF,KAAK,CAAC;MACzC,IAAI,CAACG,QAAQ,CAACH,KAAK,CAAC;IACxB,CAAC,CAAC,CAAC;EACP;EAEAG,QAAQ,CAACH,KAAiB;IACtB,IAAI,CAACA,KAAK,GAAGA,KAAK;EACtB;EACAI,QAAQ;IACJ,IAAI,IAAI,CAACJ,KAAK,EAAC;MACf,OAAO,IAAI,CAACA,KAAK;;EACrB;EAEAK,eAAe;IACX,OAAO,CAAC,CAAC,IAAI,CAACL,KAAK;EACvB;EAEAM,MAAM;IACF,IAAI,CAACH,QAAQ,CAAC,IAAI,CAAC;IACnBF,YAAY,CAACM,KAAK,EAAE;EACxB;;AA/BSf,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAgB,SAAXhB,WAAW;EAAAiB,YAFT;AAAM","names":["tap","AuthService","constructor","http","register","login","user","post","pipe","token","localStorage","setItem","setToken","getToken","isAuthenticated","logout","clear","factory","providedIn"],"sourceRoot":"","sources":["/home/stas/hcba/client/src/app/shared/services/auth.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { AuthUser } from \"./interfaces\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable, tap } from \"rxjs\";\nimport { ActivatedRoute,Params,Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\n\n\n@Injectable({\n    providedIn:'root'\n})\nexport class AuthService{\n\n    private token:string|null = null\n\n    constructor(private http:HttpClient){\n\n    }\n    register(){}\n    login(user:AuthUser):Observable<{token:string}>{\n        return this.http.post<{token:string}>(\"/api/auth/login\", user)\n        .pipe(tap(({token})=>{\n            localStorage.setItem('auth-token', token)\n            this.setToken(token)\n        }))        \n    }\n\n    setToken(token:string|null){\n        this.token = token\n    }\n    getToken():string|void{\n        if (this.token){\n        return this.token} \n    }\n\n    isAuthenticated():boolean{\n        return !!this.token\n    }\n\n    logout(){\n        this.setToken(null)\n        localStorage.clear()\n    }\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}