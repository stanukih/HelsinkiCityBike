{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../shared/services/auth.service\";\nimport * as i3 from \"@angular/forms\";\nexport class RegistrationPageComponent {\n  constructor(router, activRout, auth) {\n    this.router = router;\n    this.activRout = activRout;\n    this.auth = auth;\n  }\n  ngOnDestroy() {\n    if (this.aSub) {\n      this.aSub.unsubscribe();\n    }\n  }\n  ngOnInit() {\n    this.form = new FormGroup({\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      password: new FormControl()\n    });\n  }\n  onSubmit() {\n    this.form.disable();\n    console.log(this.form);\n    this.auth.register(this.form.value).subscribe(value => {\n      this.router.navigate(['/login'], {\n        queryParams: {\n          registered: true\n        }\n      });\n    }, error => {\n      console.log(error);\n      this.form.enable();\n    });\n  }\n}\nRegistrationPageComponent.ɵfac = function RegistrationPageComponent_Factory(t) {\n  return new (t || RegistrationPageComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.AuthService));\n};\nRegistrationPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegistrationPageComponent,\n  selectors: [[\"app-registration-page\"]],\n  decls: 20,\n  vars: 2,\n  consts: [[1, \"card-body\", 3, \"formGroup\", \"ngSubmit\"], [1, \"card-title\"], [1, \"input-field\"], [\"formControlName\", \"email\", \"id\", \"email\", \"type\", \"email\"], [\"formControlName\", \"password\", \"id\", \"password\", \"type\", \"password\"], [1, \"card-text\"], [\"formControlName\", \"admin\", \"id\", \"admin\", \"type\", \"text\", \"value\", \"delete this text\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"]],\n  template: function RegistrationPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function RegistrationPageComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(1, \"h2\", 1);\n      i0.ɵɵtext(2, \"Registration\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"label\");\n      i0.ɵɵtext(5, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 2)(8, \"label\");\n      i0.ɵɵtext(9, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 2)(12, \"label\");\n      i0.ɵɵtext(13, \"Admin key\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"p\", 5);\n      i0.ɵɵtext(15, \"Leave this field empty\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"br\");\n      i0.ɵɵelementStart(18, \"button\", 7);\n      i0.ɵɵtext(19, \"Registration\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(18);\n      i0.ɵɵproperty(\"disabled\", ctx.form.invalid || ctx.form.disabled);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAQ,gBAAgB;;;;;AASnE,OAAM,MAAOC,yBAAyB;EAKpCC,YAAmBC,MAAa,EAASC,SAAwB,EAASC,IAAgB;IAAvE,WAAM,GAANF,MAAM;IAAgB,cAAS,GAATC,SAAS;IAAwB,SAAI,GAAJC,IAAI;EAE9E;EAEAC,WAAW;IACT,IAAI,IAAI,CAACC,IAAI,EAAC;MACd,IAAI,CAACA,IAAI,CAACC,WAAW,EAAE;;EAEzB;EAEAC,QAAQ;IACN,IAAI,CAACC,IAAI,GAAG,IAAIZ,SAAS,CAAC;MACxBa,KAAK,EAAE,IAAIZ,WAAW,CAAC,IAAI,EAAE,CAACC,UAAU,CAACY,QAAQ,EAAEZ,UAAU,CAACW,KAAK,CAAC,CAAC;MACrEE,QAAQ,EAAE,IAAId,WAAW;KAC1B,CAAC;EACF;EACAe,QAAQ;IACN,IAAI,CAACJ,IAAI,CAACK,OAAO,EAAE;IACnBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,IAAI,CAAC;IACtB,IAAI,CAACL,IAAI,CAACa,QAAQ,CAAC,IAAI,CAACR,IAAI,CAACS,KAAK,CAAC,CAACC,SAAS,CAC1CD,KAAK,IAAG;MACP,IAAI,CAAChB,MAAM,CAACkB,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAC;QAC9BC,WAAW,EAAC;UACVC,UAAU,EAAC;;OAEd,CAAC;IACN,CAAC,EACEC,KAAK,IAAG;MACPR,OAAO,CAACC,GAAG,CAACO,KAAK,CAAC;MAClB,IAAI,CAACd,IAAI,CAACe,MAAM,EAAE;IACpB,CAAC,CACF;EACH;;AArCSxB,yBAAyB;mBAAzBA,yBAAyB;AAAA;AAAzBA,yBAAyB;QAAzBA,yBAAyB;EAAAyB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCXtCC,+BAAmE;MAAxBA;QAAA,OAAYC,cAAU;MAAA,EAAC;MAChED,6BAAuB;MAAAA,4BAAY;MAAAA,iBAAK;MACxCA,8BAAyB;MAChBA,qBAAK;MAAAA,iBAAQ;MACpBA,2BAAuD;MACzDA,iBAAM;MACNA,8BAAyB;MAChBA,wBAAQ;MAAAA,iBAAQ;MACvBA,4BAAgE;MAClEA,iBAAM;MACNA,+BAAyB;MAChBA,0BAAS;MAAAA,iBAAQ;MACxBA,6BAAqB;MAAAA,uCAAsB;MAAAA,iBAAI;MAC/CA,4BAA+E;MACjFA,iBAAM;MACNA,sBAAI;MACJA,kCAAyF;MAAAA,6BAAY;MAAAA,iBAAS;;;MAhBxFA,oCAAkB;MAgBhCA,gBAA0C;MAA1CA,gEAA0C","names":["FormGroup","FormControl","Validators","RegistrationPageComponent","constructor","router","activRout","auth","ngOnDestroy","aSub","unsubscribe","ngOnInit","form","email","required","password","onSubmit","disable","console","log","register","value","subscribe","navigate","queryParams","registered","error","enable","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/home/stas/hcba/client/src/app/registration-page/registration-page.component.ts","/home/stas/hcba/client/src/app/registration-page/registration-page.component.html"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { AuthService } from '../shared/services/auth.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute,Params,Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-registration-page',\n  templateUrl: './registration-page.component.html',\n  styleUrls: ['./registration-page.component.scss']\n})\nexport class RegistrationPageComponent implements OnInit, OnDestroy {\n  form!: FormGroup\n  \n  \n  aSub!:Subscription\n  constructor(public router:Router, public activRout:ActivatedRoute, public auth:AuthService){\n\n  }\n\n  ngOnDestroy(): void {\n    if (this.aSub){\n    this.aSub.unsubscribe()\n    }\n  }\n\n  ngOnInit(){\n    this.form = new FormGroup({\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      password: new FormControl(),\n    })            \n    }\n    onSubmit(){\n      this.form.disable()\n      console.log(this.form)\n      this.auth.register(this.form.value).subscribe(\n        (value)=>{\n          this.router.navigate(['/login'],{\n            queryParams:{\n              registered:true\n            }\n          })\n      },\n        (error)=>{\n          console.log(error);\n          this.form.enable()\n        }\n      )\n    }\n\n}\n","<form class=\"card-body\" [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n  <h2 class=\"card-title\">Registration</h2>\n  <div class=\"input-field\">\n    <label>Email</label>\n    <input formControlName=\"email\" id=\"email\" type=\"email\">\n  </div>\n  <div class=\"input-field\">\n    <label>Password</label>\n    <input formControlName=\"password\" id=\"password\" type=\"password\">\n  </div>\n  <div class=\"input-field\">\n    <label>Admin key</label>\n    <p class=\"card-text\">Leave this field empty</p>\n    <input formControlName=\"admin\" id=\"admin\" type=\"text\" value=\"delete this text\">\n  </div>\n  <br>\n  <button [disabled]=\"form.invalid || form.disabled\" class=\"btn btn-primary\" type=\"submit\">Registration</button>\n</form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}