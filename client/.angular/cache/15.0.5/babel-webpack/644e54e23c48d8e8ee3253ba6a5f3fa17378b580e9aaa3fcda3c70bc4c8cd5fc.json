{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../shared/services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"rxjs\";\nexport class LoginPageComponent {\n  constructor(auth, router, activRout, form, aSub) {\n    this.auth = auth;\n    this.router = router;\n    this.activRout = activRout;\n    this.form = form;\n    this.aSub = aSub;\n  }\n  ngOnDestroy() {\n    if (this.aSub) {\n      this.aSub.unsubscribe();\n    }\n  }\n  ngOnInit() {\n    this.form = new FormGroup({\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      password: new FormControl()\n    });\n    this.activRout.queryParams.subscribe(params => {\n      if (params['registered']) {\n        //Вы уже авторизованы\n      }\n    });\n  }\n  onSubmit() {\n    this.form.disable();\n    this.aSub = this.auth.login(this.form.value).subscribe(() => {\n      this.router.navigate(['/stantions']);\n      console.log('УРА');\n    }, error => {\n      console.log(error);\n      this.form.enable();\n    });\n  }\n}\nLoginPageComponent.ɵfac = function LoginPageComponent_Factory(t) {\n  return new (t || LoginPageComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.FormGroup), i0.ɵɵdirectiveInject(i4.Subscription));\n};\nLoginPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginPageComponent,\n  selectors: [[\"app-login-page\"]],\n  decls: 0,\n  vars: 0,\n  template: function LoginPageComponent_Template(rf, ctx) {},\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;AAWnE,OAAM,MAAOC,kBAAkB;EAI7BC,YAAoBC,IAAgB,EAAUC,MAAa,EAAUC,SAAwB,EAASC,IAAe,EAASC,IAAiB;IAA3H,SAAI,GAAJJ,IAAI;IAAsB,WAAM,GAANC,MAAM;IAAiB,cAAS,GAATC,SAAS;IAAwB,SAAI,GAAJC,IAAI;IAAoB,SAAI,GAAJC,IAAI;EAElI;EAEAC,WAAW;IACT,IAAI,IAAI,CAACD,IAAI,EAAC;MACd,IAAI,CAACA,IAAI,CAACE,WAAW,EAAE;;EAEzB;EAGAC,QAAQ;IACN,IAAI,CAACJ,IAAI,GAAG,IAAIP,SAAS,CAAC;MACxBY,KAAK,EAAE,IAAIb,WAAW,CAAC,IAAI,EAAE,CAACE,UAAU,CAACY,QAAQ,EAAEZ,UAAU,CAACW,KAAK,CAAC,CAAC;MACrEE,QAAQ,EAAE,IAAIf,WAAW;KAC1B,CAAC;IACF,IAAI,CAACO,SAAS,CAACS,WAAW,CAACC,SAAS,CAAEC,MAAa,IAAG;MACpD,IAAIA,MAAM,CAAC,YAAY,CAAC,EAAC;QACvB;MAAA;IAIJ,CAAC,CAAC;EACF;EAEAC,QAAQ;IACN,IAAI,CAACX,IAAI,CAACY,OAAO,EAAE;IACnB,IAAI,CAACX,IAAI,GAAG,IAAI,CAACJ,IAAI,CAACgB,KAAK,CAAC,IAAI,CAACb,IAAI,CAACc,KAAK,CAAC,CAACL,SAAS,CACpD,MAAI;MACF,IAAI,CAACX,MAAM,CAACiB,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;MACpCC,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;IACpB,CAAC,EACDC,KAAK,IAAE;MACLF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;MAClB,IAAI,CAAClB,IAAI,CAACmB,MAAM,EAAE;IAEpB,CAAC,CACF;EACH;;AA1CSxB,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAyB;EAAAC;EAAAC;EAAAC;EAAAC;AAAA","names":["FormControl","FormGroup","Validators","LoginPageComponent","constructor","auth","router","activRout","form","aSub","ngOnDestroy","unsubscribe","ngOnInit","email","required","password","queryParams","subscribe","params","onSubmit","disable","login","value","navigate","console","log","error","enable","selectors","decls","vars","template","styles"],"sourceRoot":"","sources":["/home/stas/hcba/client/src/app/login-page/login-page.component.ts"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute,Params,Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../shared/services/auth.service';\nimport { AuthUser } from '../shared/services/interfaces';\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.scss']\n})\nexport class LoginPageComponent implements OnInit, OnDestroy{\n  \n  \n\n  constructor(private auth:AuthService, private router:Router, private activRout:ActivatedRoute, public form: FormGroup, public aSub:Subscription){\n\n  }\n\n  ngOnDestroy(): void {\n    if (this.aSub){\n    this.aSub.unsubscribe()\n    }\n  }\n  \n\n  ngOnInit(){\n    this.form = new FormGroup({\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      password: new FormControl(),\n    })    \n    this.activRout.queryParams.subscribe((params:Params)=>{\n      if (params['registered']){\n        //Вы уже авторизованы\n        \n      }\n\n    })\n    }\n\n    onSubmit(){\n      this.form.disable()\n      this.aSub = this.auth.login(this.form.value).subscribe(\n        ()=> {\n          this.router.navigate(['/stantions'])\n          console.log('УРА')\n        },\n        error=> {\n          console.log(error);\n          this.form.enable()\n          \n        }\n      )\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}